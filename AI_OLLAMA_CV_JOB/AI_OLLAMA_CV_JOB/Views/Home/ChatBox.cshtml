@{
    ViewData["Title"] = "Chat AI";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<style>
    /* [Toàn bộ phần CSS đã căn chỉnh lại khoảng trắng và thụt đầu dòng] */
    body {
        background-color: #f0f2f5;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .chat-wrapper {
        max-width: 950px;
        margin: 40px auto;
        border-radius: 16px;
        display: flex;
        flex-direction: column;
        height: 85vh;
        box-shadow: 0 8px 24px rgba(0,0,0,0.12);
        background-color: #ffffff;
        overflow: hidden;
    }

    .chat-header {
        background: linear-gradient(135deg, #2979ff, #1565c0);
        color: white;
        padding: 18px 25px;
        font-size: 22px;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .chat-header-left {
        display: flex;
        align-items: center;
    }

        .chat-header-left i {
            font-size: 24px;
            margin-right: 12px;
            background: rgba(255,255,255,0.2);
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

    .chat-header-right i {
        font-size: 20px;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        transition: background 0.2s;
    }

        .chat-header-right i:hover {
            background: rgba(255,255,255,0.2);
        }

    .chat-body {
        flex: 1;
        overflow-y: auto;
        padding: 25px;
        background-color: #f8f9fb;
        scroll-behavior: smooth;
    }

    .message {
        margin-bottom: 20px;
        display: flex;
        align-items: flex-start;
        animation: fadeIn 0.3s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .message.user {
        justify-content: flex-end;
    }

    .message.ai {
        justify-content: flex-start;
    }

    .avatar {
        width: 38px;
        height: 38px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 10px;
    }

    .message.user .avatar {
        background-color: #e3f2fd;
        color: #2979ff;
        order: 2;
    }

    .message.ai .avatar {
        background-color: #e8f5e9;
        color: #43a047;
    }

    .message.user .content {
        border-radius: 18px 18px 0 18px;
        background: linear-gradient(135deg, #2979ff, #1565c0);
        color: white;
        box-shadow: 0 2px 8px rgba(41, 121, 255, 0.3);
    }

    .message.ai .content {
        border-radius: 18px 18px 18px 0;
        background-color: white;
        color: #333;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }

    .message .content {
        padding: 14px 18px;
        max-width: 65%;
        line-height: 1.6;
        font-size: 15px;
    }

    .timestamp {
        font-size: 11px;
        margin-top: 5px;
        opacity: 0.7;
    }

    .message.user .timestamp {
        text-align: right;
        color: #f0f0f0;
    }

    .message.ai .timestamp {
        color: #888;
    }

    .typing-indicator {
        display: inline-flex;
        align-items: center;
        padding: 10px 15px;
        background-color: white;
        border-radius: 18px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        margin-left: 48px;
    }

        .typing-indicator span {
            width: 8px;
            height: 8px;
            background-color: #43a047;
            border-radius: 50%;
            margin: 0 2px;
            animation: typing 1.4s infinite ease-in-out;
        }

            .typing-indicator span:nth-child(1) {
                animation-delay: 0s;
            }

            .typing-indicator span:nth-child(2) {
                animation-delay: 0.2s;
            }

            .typing-indicator span:nth-child(3) {
                animation-delay: 0.4s;
            }

    @@keyframes typing {
        0%, 60%, 100% {
            transform: translateY(0);
        }

        30% {
            transform: translateY(-5px);
        }
    }
    

    .chat-footer {
        display: flex;
        align-items: center;
        padding: 18px 25px;
        border-top: 1px solid #eaeaea;
        background-color: #ffffff;
    }

    .chat-input-container {
        display: flex;
        align-items: center;
        background-color: #f5f5f5;
        border-radius: 24px;
        padding: 4px 8px 4px 16px;
        flex: 1;
        transition: box-shadow 0.3s;
    }

        .chat-input-container:focus-within {
            box-shadow: 0 0 0 2px rgba(41, 121, 255, 0.2);
            background-color: #fff;
        }

    .chat-footer input[type="text"] {
        flex: 1;
        border: none;
        background: transparent;
        padding: 12px 0;
        font-size: 15px;
        outline: none;
        color: #333;
    }

        .chat-footer input[type="text"]::placeholder {
            color: #999;
        }

    .chat-footer .action-buttons {
        display: flex;
        align-items: center;
    }

    .chat-footer .btn {
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        font-size: 18px;
        transition: all 0.2s;
        color: #555;
        background: transparent;
        cursor: pointer;
        margin-left: 2px;
    }

        .chat-footer .btn:hover {
            background-color: #e9e9e9;
        }

        .chat-footer .btn.send {
            background: linear-gradient(135deg, #2979ff, #1565c0);
            color: white;
            margin-left: 8px;
        }

            .chat-footer .btn.send:hover {
                transform: scale(1.05);
                box-shadow: 0 2px 8px rgba(41, 121, 255, 0.4);
            }

            .chat-footer .btn.send:active {
                transform: scale(0.95);
            }

    .upload-label {
        cursor: pointer;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #fileUpload {
        display: none;
    }

    .chat-body::-webkit-scrollbar {
        width: 6px;
    }

    .chat-body::-webkit-scrollbar-track {
        background: transparent;
    }

    .chat-body::-webkit-scrollbar-thumb {
        background-color: rgba(0,0,0,0.2);
        border-radius: 10px;
    }

    .file-badge {
        display: inline-flex;
        align-items: center;
        background: #e3f2fd;
        border-radius: 12px;
        padding: 6px 12px;
        margin-top: 8px;
        font-size: 13px;
        color: #1565c0;
    }

        .file-badge i {
            margin-right: 5px;
        }
</style>

<div class="chat-wrapper">
    <div class="chat-header">
        <div class="chat-header-left">
            <i class="fas fa-robot"></i>
            <span>Chat AI Assistant</span>
        </div>
        <div class="chat-header-right">
            <i class="fas fa-ellipsis-v"></i>
        </div>
    </div>

    <div class="chat-body" id="chatMessages">
        <div class="message ai">
            <div class="avatar"><i class="fas fa-robot"></i></div>
            <div class="message-container">
                <div class="content">Xin chào! Tôi là trợ lý AI, tôi có thể giúp gì cho bạn hôm nay?</div>
                <div class="timestamp">10:00 AM</div>
            </div>
        </div>

        <div class="message user">
            <div class="message-container">
                <div class="content">Chào bạn, tôi cần giúp đỡ về một số thông tin.</div>
                <div class="timestamp">10:01 AM</div>
            </div>
            <div class="avatar"><i class="fas fa-user"></i></div>
        </div>

        <div class="message ai">
            <div class="avatar"><i class="fas fa-robot"></i></div>
            <div class="message-container">
                <div class="content">Vâng, tôi sẵn sàng hỗ trợ bạn. Bạn cần thông tin về vấn đề gì?</div>
                <div class="timestamp">10:02 AM</div>
            </div>
        </div>
    </div>

    <div class="chat-footer">
        <div class="chat-input-container">
            <input type="text" id="userMessage" placeholder="Nhập tin nhắn của bạn..." />
            <div class="action-buttons">
                <button class="btn">
                    <label for="fileUpload" class="upload-label"><i class="fas fa-paperclip"></i></label>
                </button>
                <input type="file" id="fileUpload" onchange="handleFileUpload()" />
                <button class="btn"><i class="fas fa-microphone"></i></button>
            </div>
        </div>
        <button class="btn send" onclick="sendMessage()">
            <i class="fas fa-paper-plane"></i>
        </button>
    </div>
</div>

<script>
    function sendMessage() {
        const userInput = document.getElementById('userMessage');
        const message = userInput.value.trim();
        if (message) {
            addMessage(message, 'user');
            userInput.value = '';
            showTypingIndicator();
            setTimeout(() => {
                removeTypingIndicator();
                addMessage('Cảm ơn tin nhắn của bạn. Tôi đang xử lý thông tin...', 'ai');
            }, 1500);
        }
    }

    function addMessage(text, sender) {
        const chatBody = document.getElementById('chatMessages');
        const now = new Date();
        const timeString = now.getHours() + ':' + (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${sender}`;
        messageDiv.innerHTML = sender === 'user'
            ? `<div class="message-container"><div class="content">${text}</div><div class="timestamp">${timeString}</div></div><div class="avatar"><i class="fas fa-user"></i></div>`
            : `<div class="avatar"><i class="fas fa-robot"></i></div><div class="message-container"><div class="content">${text}</div><div class="timestamp">${timeString}</div></div>`;
        chatBody.appendChild(messageDiv);
        scrollToBottom();
    }

    function showTypingIndicator() {
        const chatBody = document.getElementById('chatMessages');
        const indicatorDiv = document.createElement('div');
        indicatorDiv.id = 'typingIndicator';
        indicatorDiv.className = 'typing-indicator';
        indicatorDiv.innerHTML = `<span></span><span></span><span></span>`;
        chatBody.appendChild(indicatorDiv);
        scrollToBottom();
    }

    function removeTypingIndicator() {
        const indicator = document.getElementById('typingIndicator');
        if (indicator) indicator.remove();
    }

    function scrollToBottom() {
        const chatBody = document.getElementById('chatMessages');
        chatBody.scrollTop = chatBody.scrollHeight;
    }

    function handleFileUpload() {
        const fileInput = document.getElementById('fileUpload');
        if (fileInput.files.length > 0) {
            const fileName = fileInput.files[0].name;
            const chatBody = document.getElementById('chatMessages');
            const now = new Date();
            const timeString = now.getHours() + ':' + (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message user';
            messageDiv.innerHTML = `<div class="message-container"><div class="content">Tôi đã tải lên một tệp <div class="file-badge"><i class="fas fa-file"></i> ${fileName}</div></div><div class="timestamp">${timeString}</div></div><div class="avatar"><i class="fas fa-user"></i></div>`;
            chatBody.appendChild(messageDiv);
            scrollToBottom();
            showTypingIndicator();
            setTimeout(() => {
                removeTypingIndicator();
                addMessage(`Tôi đã nhận được tệp "${fileName}" của bạn và đang xử lý...`, 'ai');
            }, 1500);
        }
    }

    document.getElementById('userMessage').addEventListener('keypress', function (e) {
        if (e.key === 'Enter') sendMessage();
    });

    scrollToBottom();
</script>
